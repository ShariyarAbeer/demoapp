{"version":3,"sources":["pages/Post.js","pages/Setting.js","pages/Home.js","pages/Profile.js","App.js","serviceWorker.js","index.js"],"names":["Post","state","react_default","a","createElement","className","Component","Setting","Home","Profile","App","react_router_dom","basename","to","activeClassName","exact","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b94c6c16.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Post extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"PostPage\">\r\n        <h1>Post</h1>\r\n        <h2>Question:</h2>\r\n        <ul>\r\n          <li>What Is a Facebook Post?</li>\r\n        </ul>\r\n        <h2>Answer:</h2>\r\n        <p>\r\n          A Facebook post or \"status update\" is a message in a special delivery\r\n          cyber-bottle. It is a comment, picture or other media that is posted\r\n          on the user's Facebook page or \"wall.\" A Little Bit Longer Unlike\r\n          Tweets, Facebook posts aren't limited to 140 characters. They can be\r\n          as long as a paragraph and illustrated with pictures and videos. Users\r\n          can post directly to Facebook via smart phones or uploaded from a\r\n          computer. As with any social media platform, there is a method to\r\n          creating a successful Facebook post.\r\n          <li>7 Qualities of a Bangin' Facebook</li>\r\n          Post Facebook posts are about invoking engagement and action.\r\n          According to SocialApps HQ (the largest Facebook app store) (2012), an\r\n          excellent Facebook post has the following 7 qualities:\r\n          <li>It grabs! your reader's attention.</li>\r\n          <li>Has \"no brainer\" text</li>\r\n          <li>\r\n            Contains a call for action, such as asking a question or requesting\r\n            that you like something.\r\n          </li>\r\n          <li>\r\n            Is appropriate for the demographics and geographic location of your\r\n            fan base. (Yes, demographics and geography are important on the\r\n            web.){\" \"}\r\n          </li>\r\n          <li>\r\n            It contains content that 95% of your audience cares (or better yet -\r\n            is passionate) about.{\" \"}\r\n          </li>\r\n          <li>\r\n            Sells the dream of your company and fan base (If you don't know\r\n            already, find out what that dream is.){\" \"}\r\n          </li>\r\n          <li>Is based on what you have learned from ad-testing</li>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Setting extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"SettingPage\">\r\n        <h1>Setting</h1>\r\n        <h2>Question:</h2>\r\n        <ul>\r\n          <li>What is Setting?</li>\r\n          <li>Examples of Setting.</li>\r\n        </ul>\r\n        <h2>==></h2>\r\n        <p>\r\n          Setting is the time and place (or when and where) of the story. It’s a\r\n          literary element of literature used in novels, short stories, plays,\r\n          films, etc., and usually introduced during the exposition (beginning)\r\n          of the story, along with the characters. The setting may also include\r\n          the environment of the story, which can be made up of the physical\r\n          location, climate, weather, or social and cultural surroundings. There\r\n          are various ways that time and place indicate setting. Time can cover\r\n          many areas, such as the character’s time of life, the time of day,\r\n          time of year, time period such as the past, present, or future, etc.\r\n          Place also covers a lot of areas, such as a certain building, room in\r\n          a building, country, city, beach, in a mode of transport such as a\r\n          car, bus, boat, indoors or out, etc. The setting of a story can change\r\n          throughout the plot. The environment includes geographical location\r\n          such as beach or mountains, the climate and weather, and the social or\r\n          cultural aspects such as a school, theatre, meeting, club, etc.\r\n        </p>\r\n        <h2>==></h2>\r\n        <p>\r\n          A simple example to understand setting is the Disney movie\r\n          “Cinderella.” The setting starts out as\r\n          <li>Time:</li> Cinderella as a young girl, long ago in the past\r\n          <li>Place:</li> Cinderella’s home in a kingdom far away After her\r\n          father dies, the time aspect of setting changes, skipping roughly ten\r\n          years into the future. Understanding this change in time helps in\r\n          keeping up with the story.\r\n          <li>Time:</li> Cinderella as a young woman, long ago in the past\r\n          <li>Place:</li> Cinderella’s home in a kingdom, in her bedroom and in\r\n          the kitchen\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Setting;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Home extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"HomePage\">\r\n        <h1>Home</h1>\r\n        <h2>Question:</h2>\r\n        <ul>\r\n          <li>What is Facebook Home?</li>\r\n        </ul>\r\n        <h2>Answer:</h2>\r\n        <p>\r\n          Facebook and its partners have announced the HTC First, making a\r\n          U-turn on something it said it would never do: launch a Facebook\r\n          phone. It won't be for everyone, but Facebook does hope to tempt you\r\n          in with a clever Android user interface tweak. And should you not\r\n          fancy a new mid-range handset you can even convert your existing\r\n          Android smartphone into a \"Facebook Phone\", using the company's new\r\n          software. Called Facebook Home you can download it for your phone from\r\n          12 April. So here's how to get it set up and what to expect when you\r\n          do.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Profile extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"ProfilePage\">\r\n        <h1>Profile</h1>\r\n        <h2>Question:</h2>\r\n        <ul>\r\n          <li>Where is your Profile?</li>\r\n        </ul>\r\n        <h2>Answer:</h2>\r\n        <p>\r\n          A file or group of files stored on a user. These files may contain\r\n          preferences, settings, contact information, credit information, etc. A\r\n          profile allows the user's settings to be restored when that user logs\r\n          back into the computer, network, or service.\r\n        </p>\r\n        <p>Also see: BIO, Internet terms, Profile site, User, User profile</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Link, NavLink } from \"react-router-dom\";\nimport \"./App.css\";\nimport Post from \"./pages/Post\";\nimport Setting from \"./pages/Setting\";\nimport Home from \"./pages/Home\";\nimport Profile from \"./pages/Profile\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename=\"/react-auth-ui/\">\n        <div className=\"App\">\n          <div className=\"Part_A\">\n            <div className=\"Pages\">\n              <div>\n                <NavLink\n                  to=\"/home\"\n                  activeClassName=\"Pages__Link--Active\"\n                  className=\"Pages__Link\"\n                >\n                  Home\n                </NavLink>\n              </div>\n              <div>\n                <NavLink\n                  exact\n                  to=\"/\"\n                  activeClassName=\"Pages__Link--Active\"\n                  className=\"Pages__Link\"\n                >\n                  Profile\n                </NavLink>\n              </div>\n              <div>\n                <NavLink\n                  to=\"/post\"\n                  activeClassName=\"Pages__Link--Active\"\n                  className=\"Pages__Link\"\n                >\n                  Post\n                </NavLink>\n              </div>\n              <div>\n                <NavLink\n                  to=\"/setting\"\n                  activeClassName=\"Pages__Link--Active\"\n                  className=\"Pages__Link\"\n                >\n                  Setting\n                </NavLink>\n              </div>\n            </div>\n          </div>\n          <div className=\"Part_B\">\n            <Route exact path=\"/\" component={Profile} />\n            <Route path=\"/home\" component={Home} />\n            <Route path=\"/post\" component={Post} />\n            <Route path=\"/setting\" component={Setting} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}